// <auto-generated />
using System;
using JSL.Motorista.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JSL.Motorista.Data.Migrations
{
    [DbContext(typeof(MotoristaContext))]
    partial class MotoristaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JSL.Motorista.Domain.Motorista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("JSL.Motorista.Domain.Motorista", b =>
                {
                    b.OwnsOne("JSL.Motorista.Domain.Caminhao", "Caminhao", b1 =>
                        {
                            b1.Property<Guid>("MotoristaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Eixos")
                                .HasColumnType("int");

                            b1.Property<string>("Marca")
                                .IsRequired()
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Modelo")
                                .IsRequired()
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Placa")
                                .IsRequired()
                                .HasColumnType("varchar(50)");

                            b1.HasKey("MotoristaId");

                            b1.ToTable("Motorista");

                            b1.WithOwner()
                                .HasForeignKey("MotoristaId");
                        });

                    b.OwnsOne("JSL.Motorista.Domain.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("MotoristaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("CEP");

                            b1.Property<string>("Descricao")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Descricao");

                            b1.Property<string>("Estado")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Estado");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Municipio")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Municipio");

                            b1.Property<string>("Numero")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("Numero");

                            b1.HasKey("MotoristaId");

                            b1.ToTable("Motorista");

                            b1.WithOwner()
                                .HasForeignKey("MotoristaId");
                        });

                    b.OwnsOne("JSL.Motorista.Domain.Nome", "Nome", b1 =>
                        {
                            b1.Property<Guid>("MotoristaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PrimeiroNome")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("PrimeiroNome");

                            b1.Property<string>("UltimoNome")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("UltimoNome");

                            b1.HasKey("MotoristaId");

                            b1.ToTable("Motorista");

                            b1.WithOwner()
                                .HasForeignKey("MotoristaId");
                        });

                    b.Navigation("Caminhao");

                    b.Navigation("Endereco");

                    b.Navigation("Nome");
                });
#pragma warning restore 612, 618
        }
    }
}
